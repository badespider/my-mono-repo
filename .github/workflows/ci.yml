name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  ci:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.15.0

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Type check
      run: pnpm run --parallel type-check

    - name: Lint all packages
      run: pnpm run lint:all

    - name: Test all packages
      run: pnpm run test:all

    - name: Build all packages
      run: pnpm run build:all
      env:
        NODE_ENV: production

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.15.0

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run security audit
      run: pnpm audit

    - name: Check for outdated dependencies
      run: pnpm outdated
      continue-on-error: true

  package-specific:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        package: [backend, web, mobile]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.15.0

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Lint ${{ matrix.package }}
      run: pnpm --filter @org/${{ matrix.package }} run lint

    - name: Test ${{ matrix.package }}
      run: pnpm --filter @org/${{ matrix.package }} run test

    - name: Build ${{ matrix.package }}
      run: pnpm --filter @org/${{ matrix.package }} run build
      env:
        NODE_ENV: production

    - name: Package-specific checks for ${{ matrix.package }}
      run: |
        if [ "${{ matrix.package }}" = "backend" ]; then
          echo "Running backend-specific checks..."
          # Add backend-specific checks here
        elif [ "${{ matrix.package }}" = "web" ]; then
          echo "Running web-specific checks..."
          # Add web-specific checks here (e.g., bundle size analysis)
        elif [ "${{ matrix.package }}" = "mobile" ]; then
          echo "Running mobile-specific checks..."
          # Add mobile-specific checks here (e.g., Expo CLI checks)
        fi
